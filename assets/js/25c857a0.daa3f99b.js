"use strict";(self.webpackChunksharek_dev=self.webpackChunksharek_dev||[]).push([[7880],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return k}});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),c=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},u=function(e){var a=c(e.components);return r.createElement(l.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(t),k=n,d=m["".concat(l,".").concat(k)]||m[k]||p[k]||o;return t?r.createElement(d,s(s({ref:a},u),{},{components:t})):r.createElement(d,s({ref:a},u))}));function k(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1510:function(e,a,t){t.r(a),t.d(a,{default:function(){return y},frontMatter:function(){return h},metadata:function(){return g},toc:function(){return v}});var r=t(7462),n=t(3366),o=t(7294),s=t(3905),i=t(944),l=t(6010),c="tabItem_1uMI",u="tabItemActive_2DSg";var p=37,m=39;var k=function(e){var a=e.lazy,t=e.block,r=e.defaultValue,n=e.values,s=e.groupId,k=e.className,d=(0,i.Z)(),f=d.tabGroupChoices,h=d.setTabGroupChoices,g=(0,o.useState)(r),v=g[0],b=g[1],y=o.Children.toArray(e.children),N=[];if(null!=s){var T=f[s];null!=T&&T!==v&&n.some((function(e){return e.value===T}))&&b(T)}var _=function(e){var a=e.currentTarget,t=N.indexOf(a),r=n[t].value;b(r),null!=s&&(h(s,r),setTimeout((function(){var e,t,r,n,o,s,i,l;(e=a.getBoundingClientRect(),t=e.top,r=e.left,n=e.bottom,o=e.right,s=window,i=s.innerHeight,l=s.innerWidth,t>=0&&o<=l&&n<=i&&r>=0)||(a.scrollIntoView({block:"center",behavior:"smooth"}),a.classList.add(u),setTimeout((function(){return a.classList.remove(u)}),2e3))}),150))},w=function(e){var a,t;switch(e.keyCode){case m:var r=N.indexOf(e.target)+1;t=N[r]||N[0];break;case p:var n=N.indexOf(e.target)-1;t=N[n]||N[N.length-1]}null==(a=t)||a.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},k)},n.map((function(e){var a=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:v===a?0:-1,"aria-selected":v===a,className:(0,l.Z)("tabs__item",c,{"tabs__item--active":v===a}),key:a,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:_,onClick:_},t)}))),a?(0,o.cloneElement)(y.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},y.map((function(e,a){return(0,o.cloneElement)(e,{key:a,hidden:e.props.value!==v})}))))};var d=function(e){var a=e.children,t=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:t,className:r},a)},f=["components"],h={title:"Quick Start"},g={unversionedId:"kafka/quick_start",id:"kafka/quick_start",isDocsHomePage:!1,title:"Quick Start",description:"Introduction",source:"@site/notes/big_data_notes/kafka/quick_start.mdx",sourceDirName:"kafka",slug:"/kafka/quick_start",permalink:"/big_data/kafka/quick_start",version:"current",frontMatter:{title:"Quick Start"},sidebar:"docs",previous:{title:"ReduceByKey vs GroupByKey",permalink:"/big_data/spark/optimizations/reducebykey_vs_groupbykey"},next:{title:"Cheat Sheet",permalink:"/big_data/kafka/cheat_sheet"}},v=[{value:"Introduction",id:"introduction",children:[]},{value:"How does kafka work in a nuttshel ?",id:"how-does-kafka-work-in-a-nuttshel-",children:[]},{value:"Setup a kafka cluster",id:"setup-a-kafka-cluster",children:[]},{value:"Manage topics",id:"manage-topics",children:[{value:"Create topics",id:"create-topics",children:[]},{value:"Configure topics",id:"configure-topics",children:[]},{value:"Delete a topic",id:"delete-a-topic",children:[]}]},{value:"Create simple producers and clients",id:"create-simple-producers-and-clients",children:[{value:"Producer",id:"producer",children:[]},{value:"Consumer",id:"consumer",children:[]}]},{value:"Resources",id:"resources",children:[]}],b={toc:v};function y(e){var a=e.components,t=(0,n.Z)(e,f);return(0,s.kt)("wrapper",(0,r.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"Kafka is a message broker system. It's main purpose is to handle real-time data feeds send by producers and make it available to consumers to subscribe and read those feeds.\nIn other terms, Kafka is a data bus for scalable distributed systems.\nKafka insures 3 main key points : "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"unified plateform"),(0,s.kt)("li",{parentName:"ul"},"high-throughput"),(0,s.kt)("li",{parentName:"ul"},"low-latency")),(0,s.kt)("h2",{id:"how-does-kafka-work-in-a-nuttshel-"},"How does kafka work in a nuttshel ?"),(0,s.kt)("p",null,"Kafka is a distributed system consisting of servers and clients that communicate via a high-performance TCP network protocol"),(0,s.kt)("h2",{id:"setup-a-kafka-cluster"},"Setup a kafka cluster"),(0,s.kt)("p",null,"In this tutorial, we will use docker-compose to run a 3 node cluster."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '2'\n\nservices:\n  zookeeper:\n    image: 'bitnami/zookeeper:latest'\n    ports:\n     - '2181:2181'\n    environment:\n      - ALLOW_ANONYMOUS_LOGIN=yes\n  kafka-1:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9091:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n\n  kafka-2:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9092:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n\n  kafka-3:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9093:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -d\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"zkCli.sh\n\n> ls /brokers/ids\n[1001, 1002, 1003]\n")),(0,s.kt)("h2",{id:"manage-topics"},"Manage topics"),(0,s.kt)("h3",{id:"create-topics"},"Create topics"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Create a topic"',title:'"Create',a:!0,'topic"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --create --topic sharek.awesome-tutorials.likes --partitions 3 --replication-factor 3\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"WARNING: Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both.\nCreated topic sharek.awesome-tutorials.likes.\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="List topics"',title:'"List','topics"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --list\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="List topics"',title:'"List','topics"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --describe\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Topic: sharek.awesome-tutorials.likes   TopicId: j8Lr93OTQSytSsasSZk4mg PartitionCount: 3       ReplicationFactor: 3    Configs: \n        Topic: sharek.awesome-tutorials.likes   Partition: 0    Leader: 1001    Replicas: 1001,1002,1003        Isr: 1001\n        Topic: sharek.awesome-tutorials.likes   Partition: 1    Leader: 1002    Replicas: 1002,1003,1001        Isr: 1002,1003,1001\n        Topic: sharek.awesome-tutorials.likes   Partition: 2    Leader: 1003    Replicas: 1003,1001,1002        Isr: 1003,1001,1002\n")),(0,s.kt)("h3",{id:"configure-topics"},"Configure topics"),(0,s.kt)("p",null,"retention\npurge "),(0,s.kt)("h3",{id:"delete-a-topic"},"Delete a topic"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kafka-topics.sh --zookeeper zookeeper:2181 --delete --topic sharek.awesome-tutorials.likes\n")),(0,s.kt)("h2",{id:"create-simple-producers-and-clients"},"Create simple producers and clients"),(0,s.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,s.kt)(d,{value:"python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"pip install kafka-python\n"))),(0,s.kt)(d,{value:"scala",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies ++= Seq(\n    "org.apache.kafka" % "kafka-clients" % "2.5 .0",\n    scalaTest % Test\n  )\n'))),(0,s.kt)(d,{value:"go",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,s.kt)("h3",{id:"producer"},"Producer"),(0,s.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,s.kt)(d,{value:"python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from time import sleep\nfrom json import dumps\nfrom random import random\nfrom kafka import KafkaProducer\nimport itertools as it\n\nbootstrap_servers = ['localhost:9093']\nserialiser = lambda x: dumps(x).encode('utf-8')\n\ntopic_name = \"sharek.tutorial.likes\"\nproducer = KafkaProducer(bootstrap_servers=bootstrap_servers, value_serializer=serialiser)\n\ncounter = it.count()\nwhile True:\n    data = {'x' : next(counter), 'y': random()}\n    producer.send(topic_name, value=data)\n    sleep(0.5)\n"))),(0,s.kt)(d,{value:"scala",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'import org.apache.kafka.clients.producer.{KafkaProducer, ProducerRecord}\nimport java.util.Properties\n\nobject SimpleProducer extends App {\n\n  val props = new Properties()\n  props.put("bootstrap.servers", "localhost:9093,localhost:9094,localhost:9095")\n  props.put("group.id", "scala-consumer")\n  props.put("auto.offset.reset", "latest")\n  props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer")\n  props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer")\n\n  val producer = new KafkaProducer[String, String](props)\n\n  val topic = "sharek.tutorial.likes"\n\n  while (true) {\n    producer.send(new ProducerRecord(topic, "Hi !"))\n    Thread.sleep(1000)\n  }\n}\n'))),(0,s.kt)(d,{value:"go",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,s.kt)("h3",{id:"consumer"},"Consumer"),(0,s.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,s.kt)(d,{value:"python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from json import loads\nfrom kafka import KafkaConsumer\n\nbootstrap_servers = ['localhost:9093', 'localhost:9094', 'localhost:9095']\ndef deserialiser(x): return loads(x.decode('utf-8'))\n\n\ntopic_name = \"sharek.tutorial.likes\"\n\nconsumer = KafkaConsumer(topic_name,\n                         bootstrap_servers=bootstrap_servers,\n                         auto_offset_reset='earliest', \n                         enable_auto_commit=True, \n                         group_id='sharek.consumer.likes', \n                         value_deserializer=deserialiser)\n\nfor message in consumer:\n    print (\"%s:%d:%d: key=%s value=%s\" % (message.topic, message.partition,\n                                          message.offset, message.key,\n                                          message.value))\n"))),(0,s.kt)(d,{value:"scala",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'import org.apache.kafka.clients.consumer.KafkaConsumer\n\nimport java.time.Duration.ofHours\nimport java.util.Properties\nimport scala.jdk.CollectionConverters._\n\nobject SimpleConsumer extends App {\n\n  val props = new Properties()\n  props.put("bootstrap.servers", "localhost:9093,localhost:9094,localhost:9095")\n  props.put("group.id", "scala-consumer")\n  props.put("auto.offset.reset", "latest")\n  props.put("key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer")\n  props.put("value.deserializer", "org.apache.kafka.common.serialization.StringDeserializer")\n\n  val consumer = new KafkaConsumer[String, String](props)\n\n  consumer.subscribe(List("sharek.tutorial.likes").asJavaCollection)\n\n  while(true) {\n    val record = consumer.poll(ofHours(100)).asScala\n\n    for (data <- record.iterator){\n      println(s"Fetched ${data.value()}")\n    }\n  }\n}\n'))),(0,s.kt)(d,{value:"go",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://medium.com/@TimvanBaarsen/apache-kafka-cli-commands-cheat-sheet-a6f06eac01b"},"https://medium.com/@TimvanBaarsen/apache-kafka-cli-commands-cheat-sheet-a6f06eac01b"))))}y.isMDXComponent=!0},9443:function(e,a,t){var r=(0,t(7294).createContext)(void 0);a.Z=r},944:function(e,a,t){var r=t(7294),n=t(9443);a.Z=function(){var e=(0,r.useContext)(n.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},6010:function(e,a,t){function r(e){var a,t,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(t=r(e[a]))&&(n&&(n+=" "),n+=t);else for(a in e)e[a]&&(n&&(n+=" "),n+=a);return n}function n(){for(var e,a,t=0,n="";t<arguments.length;)(e=arguments[t++])&&(a=r(e))&&(n&&(n+=" "),n+=a);return n}t.d(a,{Z:function(){return n}})}}]);