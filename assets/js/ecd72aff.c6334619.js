"use strict";(self.webpackChunksharek_dev=self.webpackChunksharek_dev||[]).push([[2013],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>d});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),p=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},u=function(e){var a=p(e.components);return r.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=n,k=m["".concat(i,".").concat(d)]||m[d]||c[d]||o;return t?r.createElement(k,s(s({ref:a},u),{},{components:t})):r.createElement(k,s({ref:a},u))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3510:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>y,contentTitle:()=>h,default:()=>w,frontMatter:()=>g,metadata:()=>b,toc:()=>N});var r=t(7462),n=t(7294),o=t(3905),s=t(6010),l=t(2389),i=t(7392),p=t(7094),u=t(2466);const c="tabList__CuJ",m="tabItem_LNqP";function d(e){var a,t;const{lazy:o,block:l,defaultValue:d,values:k,groupId:f,className:v}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=k?k:g.map((e=>{let{props:{value:a,label:t,attributes:r}}=e;return{value:a,label:t,attributes:r}})),b=(0,i.l)(h,((e,a)=>e.value===a.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(a=null!=d?d:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?a:g[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:T}=(0,p.U)(),[w,_]=(0,n.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=f){const e=N[f];null!=e&&e!==w&&h.some((a=>a.value===e))&&_(e)}const x=e=>{const a=e.currentTarget,t=O.indexOf(a),r=h[t].value;r!==w&&(E(a),_(r),null!=f&&T(f,String(r)))},C=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{var r;const a=O.indexOf(e.currentTarget)+1;t=null!=(r=O[a])?r:O[0];break}case"ArrowLeft":{var n;const a=O.indexOf(e.currentTarget)-1;t=null!=(n=O[a])?n:O[O.length-1];break}}null==(a=t)||a.focus()};return n.createElement("div",{className:(0,s.Z)("tabs-container",c)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":l},v)},h.map((e=>{let{value:a,label:t,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===a?0:-1,"aria-selected":w===a,key:a,ref:e=>O.push(e),onKeyDown:C,onFocus:x,onClick:x},o,{className:(0,s.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":w===a})}),null!=t?t:a)}))),o?(0,n.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==w})))))}function k(e){const a=(0,l.Z)();return n.createElement(d,(0,r.Z)({key:String(a)},e))}const f="tabItem_Ymn6";function v(e){let{children:a,hidden:t,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(f,r),hidden:t},a)}const g={title:"Quick Start",sidebar_position:1},h=void 0,b={unversionedId:"kafka/index",id:"kafka/index",title:"Quick Start",description:"Introduction",source:"@site/sections/data_processing/kafka/index.mdx",sourceDirName:"kafka",slug:"/kafka/",permalink:"/data_processing/kafka/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Quick Start",sidebar_position:1},sidebar:"docs",previous:{title:"ReduceByKey vs GroupByKey",permalink:"/data_processing/spark/02.5-optimizations/reducebykey_vs_groupbykey"},next:{title:"Best practices",permalink:"/data_processing/kafka/best_practices"}},y={},N=[{value:"Introduction",id:"introduction",level:2},{value:"How does kafka work in a nuttshel ?",id:"how-does-kafka-work-in-a-nuttshel-",level:2},{value:"Setup a kafka cluster",id:"setup-a-kafka-cluster",level:2},{value:"Manage topics",id:"manage-topics",level:2},{value:"Create topics",id:"create-topics",level:3},{value:"Configure topics",id:"configure-topics",level:3},{value:"Delete a topic",id:"delete-a-topic",level:3},{value:"Create simple producers and clients",id:"create-simple-producers-and-clients",level:2},{value:"Producer",id:"producer",level:3},{value:"Consumer",id:"consumer",level:3},{value:"Resources",id:"resources",level:2}],T={toc:N};function w(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},T,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Kafka is a message broker system. It's main purpose is to handle real-time data feeds send by producers and make it available to consumers to subscribe and read those feeds.\nIn other terms, Kafka is a data bus for scalable distributed systems.\nKafka insures 3 main key points : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"unified plateform"),(0,o.kt)("li",{parentName:"ul"},"high-throughput"),(0,o.kt)("li",{parentName:"ul"},"low-latency")),(0,o.kt)("h2",{id:"how-does-kafka-work-in-a-nuttshel-"},"How does kafka work in a nuttshel ?"),(0,o.kt)("p",null,"Kafka is a distributed system consisting of servers and clients that communicate via a high-performance TCP network protocol"),(0,o.kt)("h2",{id:"setup-a-kafka-cluster"},"Setup a kafka cluster"),(0,o.kt)("p",null,"In this tutorial, we will use docker-compose to run a 3 node cluster."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '2'\n\nservices:\n  zookeeper:\n    image: 'bitnami/zookeeper:latest'\n    ports:\n     - '2181:2181'\n    environment:\n      - ALLOW_ANONYMOUS_LOGIN=yes\n  kafka-1:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9091:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n\n  kafka-2:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9092:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n\n  kafka-3:\n    image: 'bitnami/kafka:latest'\n    hostname: kafka.example.com\n    ports:\n      - '9093:9092'\n    environment:\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -d\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"zkCli.sh\n\n> ls /brokers/ids\n[1001, 1002, 1003]\n")),(0,o.kt)("h2",{id:"manage-topics"},"Manage topics"),(0,o.kt)("h3",{id:"create-topics"},"Create topics"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Create a topic"',title:'"Create',a:!0,'topic"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --create --topic sharek.awesome-tutorials.likes --partitions 3 --replication-factor 3\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"WARNING: Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both.\nCreated topic sharek.awesome-tutorials.likes.\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="List topics"',title:'"List','topics"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --list\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="List topics"',title:'"List','topics"':!0},"kafka-topics.sh --zookeeper zookeeper:2181 --describe\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Topic: sharek.awesome-tutorials.likes   TopicId: j8Lr93OTQSytSsasSZk4mg PartitionCount: 3       ReplicationFactor: 3    Configs: \n        Topic: sharek.awesome-tutorials.likes   Partition: 0    Leader: 1001    Replicas: 1001,1002,1003        Isr: 1001\n        Topic: sharek.awesome-tutorials.likes   Partition: 1    Leader: 1002    Replicas: 1002,1003,1001        Isr: 1002,1003,1001\n        Topic: sharek.awesome-tutorials.likes   Partition: 2    Leader: 1003    Replicas: 1003,1001,1002        Isr: 1003,1001,1002\n")),(0,o.kt)("h3",{id:"configure-topics"},"Configure topics"),(0,o.kt)("p",null,"retention\npurge "),(0,o.kt)("h3",{id:"delete-a-topic"},"Delete a topic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kafka-topics.sh --zookeeper zookeeper:2181 --delete --topic sharek.awesome-tutorials.likes\n")),(0,o.kt)("h2",{id:"create-simple-producers-and-clients"},"Create simple producers and clients"),(0,o.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(v,{value:"python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"pip install kafka-python\n"))),(0,o.kt)(v,{value:"scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies ++= Seq(\n    "org.apache.kafka" % "kafka-clients" % "2.5 .0",\n    scalaTest % Test\n  )\n'))),(0,o.kt)(v,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,o.kt)("h3",{id:"producer"},"Producer"),(0,o.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(v,{value:"python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from time import sleep\nfrom json import dumps\nfrom random import random\nfrom kafka import KafkaProducer\nimport itertools as it\n\nbootstrap_servers = ['localhost:9093']\nserialiser = lambda x: dumps(x).encode('utf-8')\n\ntopic_name = \"sharek.tutorial.likes\"\nproducer = KafkaProducer(bootstrap_servers=bootstrap_servers, value_serializer=serialiser)\n\ncounter = it.count()\nwhile True:\n    data = {'x' : next(counter), 'y': random()}\n    producer.send(topic_name, value=data)\n    sleep(0.5)\n"))),(0,o.kt)(v,{value:"scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import org.apache.kafka.clients.producer.{KafkaProducer, ProducerRecord}\nimport java.util.Properties\n\nobject SimpleProducer extends App {\n\n  val props = new Properties()\n  props.put("bootstrap.servers", "localhost:9093,localhost:9094,localhost:9095")\n  props.put("group.id", "scala-consumer")\n  props.put("auto.offset.reset", "latest")\n  props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer")\n  props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer")\n\n  val producer = new KafkaProducer[String, String](props)\n\n  val topic = "sharek.tutorial.likes"\n\n  while (true) {\n    producer.send(new ProducerRecord(topic, "Hi !"))\n    Thread.sleep(1000)\n  }\n}\n'))),(0,o.kt)(v,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,o.kt)("h3",{id:"consumer"},"Consumer"),(0,o.kt)(k,{className:"unique-tabs",groupId:"programming-language",defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Scala",value:"scala"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(v,{value:"python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from json import loads\nfrom kafka import KafkaConsumer\n\nbootstrap_servers = ['localhost:9093', 'localhost:9094', 'localhost:9095']\ndef deserialiser(x): return loads(x.decode('utf-8'))\n\n\ntopic_name = \"sharek.tutorial.likes\"\n\nconsumer = KafkaConsumer(topic_name,\n                         bootstrap_servers=bootstrap_servers,\n                         auto_offset_reset='earliest', \n                         enable_auto_commit=True, \n                         group_id='sharek.consumer.likes', \n                         value_deserializer=deserialiser)\n\nfor message in consumer:\n    print (\"%s:%d:%d: key=%s value=%s\" % (message.topic, message.partition,\n                                          message.offset, message.key,\n                                          message.value))\n"))),(0,o.kt)(v,{value:"scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import org.apache.kafka.clients.consumer.KafkaConsumer\n\nimport java.time.Duration.ofHours\nimport java.util.Properties\nimport scala.jdk.CollectionConverters._\n\nobject SimpleConsumer extends App {\n\n  val props = new Properties()\n  props.put("bootstrap.servers", "localhost:9093,localhost:9094,localhost:9095")\n  props.put("group.id", "scala-consumer")\n  props.put("auto.offset.reset", "latest")\n  props.put("key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer")\n  props.put("value.deserializer", "org.apache.kafka.common.serialization.StringDeserializer")\n\n  val consumer = new KafkaConsumer[String, String](props)\n\n  consumer.subscribe(List("sharek.tutorial.likes").asJavaCollection)\n\n  while(true) {\n    val record = consumer.poll(ofHours(100)).asScala\n\n    for (data <- record.iterator){\n      println(s"Fetched ${data.value()}")\n    }\n  }\n}\n'))),(0,o.kt)(v,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"")))),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://medium.com/@TimvanBaarsen/apache-kafka-cli-commands-cheat-sheet-a6f06eac01b"},"https://medium.com/@TimvanBaarsen/apache-kafka-cli-commands-cheat-sheet-a6f06eac01b"))))}w.isMDXComponent=!0}}]);